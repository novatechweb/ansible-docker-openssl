---
# file: roles/docker-openssl/tasks/restore.yaml

# *****************************************************************************
# Setup the directory where the backup and restore is to take place

- name: restore dir
  file:
    state: directory
    path: '{{ openssl_docker_restore_dir }}'
    owner: root
    group: tape
    mode: 'u=rwx,g=rwx,o=rx'
    recurse: no
    setype: svirt_sandbox_file_t

# *****************************************************************************
# Get data from tape

- name: exists - openssl archive
  stat:
    path: '{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}'
    get_checksum: False
    get_md5: False
  register: st_openssl_backup_file

- name: data from tape
  bacula:
    command: restore
    storage: '{{ bacula_storage }}'
    fileset: '{{ bacula_fileset }}'
    dest: '{{ bacula_dest }}'
    path_to_restore: '{{ openssl_docker_backup_dir }}'
  when: st_openssl_backup_file.stat.exists == False

- name: Set permissions for data-volume data
  file:
    path: '{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}'
    state: touch
    owner: root
    group: root
    mode: 'u=rw,g=rw,o='

- name: exists - openssl archive
  stat:
    path: '{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}'
    get_checksum: False
    get_md5: False
  register: st_openssl_backup_file

# *****************************************************************************
# restore the archive

- name: extract archive
  docker_container:
    command: ['extract', '{{ openssl_docker_restore_dir }}/{{ openssl_backup_file }}']
    detach: False
    image: '{{ openssl_image_name }}:{{ docker_image_tag }}'
    name: openssl_restore
    volumes:
      - '{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}:{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}:z'
      - '{{ openssl_dv_name }}:/etc/ssl/private:z'

- name: extract archive
  docker_container:
    name: openssl_restore
    state: absent


# *****************************************************************************
# cleanup

- name: remove - openssl archive
  file:
    path: '{{ openssl_docker_restore_dir }}'
    state: absent

- name: State file
  shell: 'date --rfc-3339=seconds > {{ docker_restore_config_base_dir }}/{{ openssl_dv_name }}/restore.date.txt'
  when: st_openssl_restore.stat.exists == False
